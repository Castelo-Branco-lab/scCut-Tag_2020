include: 'preflight'
include: 'snakefile_clustering'
include: 'snakefile_other_datasets'

rule all_integration:
  input:
    'results/integration/H3K4me3_RNA/H3K4me3_RNA_coembed.Rds',
    expand('results/{antibody}/integration/integrated.Rds',antibody = ['Rad21','Olig2']),
    'results/integration/histone_3active/histone_3active_integrated.Rds',
    'results/other_datasets/PCA/PCA_table_cell_lines.npz',
    'results/other_datasets/PCA/PCA_table_brain.npz',
    expand("results/other_datasets/correlation/{antibody}_correlation_matrix.txt.gz", antibody = antibody_dict.keys()),
    

####### H3K4me4 RNA integration
rule H3K4me3_Sten_integrate:
  input:
    'results/H3K4me3/clustering/01.clustering.Rds',
    'results/Sten_RNA/clustering/01.clustering_20000cells.Rds',
    notebook = os.path.dirname(workflow.basedir) + '/notebooks/integration/integration_H3K4me3_RNA.Rmd',
  output:
    'results/integration/H3K4me3_RNA/H3K4me3_RNA_coembed.Rds'
  params:
    report = CWD + '/results/integration/H3K4me3_RNA/H3K4me3_RNA_coembed.html',
    out_prefix = CWD + '/results/'
  shell:
    "Rscript -e \"rmarkdown::render(input='{input.notebook}',output_file = '{params.report}', params=list(out_prefix = '{params.out_prefix}'))\""

    
######## Olig2 and Rad21
rule integration_olig2_rad21:
  input:
    'results/{antibody}/clustering/01.clustering.Rds',
    'results/H3K27ac/clustering/01.clustering.Rds',
    notebook = os.path.dirname(workflow.basedir) + "/notebooks/{antibody}/Integration_H3K27ac.Rmd",
  output:
    'results/{antibody}/integration/integrated.Rds',
    directory('results/{antibody}/integration/bigwig/'),
  params:
    report         = CWD + '/results/{antibody}/integration/integrated.html',
    out_prefix     = CWD + '/results/'
  shell:
    "Rscript -e \"rmarkdown::render(input='{input.notebook}',output_file='{params.report}',params=list(out_prefix='{params.out_prefix}')) \""


###### Integration 3 active marks
rule integration_active:
  input:
    "results/H3K4me3/clustering/01.clustering.Rds",
    "results/H3K27ac/clustering/01.clustering.Rds",
    "results/H3K36me3/clustering/01.clustering.Rds",
    notebook = os.path.dirname(workflow.basedir) + "/notebooks/integration/integration_3active.Rmd",
  output:
    "results/integration/histone_3active/histone_3active_integrated.Rds",
  params:
    report     = CWD + "/results/integration/histone_3active/Histone_3active_integrated.html",
    out_prefix = CWD + "/results/"
  shell:
    "Rscript -e \"rmarkdown::render(input='{input.notebook}',output_file = '{params.report}', params=list(out_prefix = '{params.out_prefix}'))\" "



rule PCA:
  input:
    scCT_bigwig        = "results/H3K27me3/clustering/bigwig/",
    markers_brain      = 'results/H3K27me3/clustering/markers_bed/',
    markers_cell_lines = 'results/H3K27me3_cell_lines/clustering/markers_bed/',
    cell_lines         = "results/H3K27me3_cell_lines/clustering/bigwig/",
    bonev_CN           = "results/other_datasets/bonev/GSE96107_CN_H3K27me3.bw",
    matsuda_MGL        = "results/other_datasets/matsuda/GSM2800523_Microglia_H3K27me3_ChIP-seq.bw",
    OPCs_GCB           = config['CR_GCB']['OPC']['bigwig'],     # Deposit to GEO and fix link
    Oli_neu_GCB        = config['CR_GCB']['Oli-neu']['bigwig'],   # Deposit to GEO and fix link
    mESC_bigwig_1      = 'results/other_datasets/mESC_ENCODE/bigwig/mESC_rep1.bw',
    mESC_bigwig_2      = 'results/other_datasets/mESC_ENCODE/bigwig/mESC_rep2.bw',
    cells_3T3_rep1     = 'results/other_datasets/3T3_cells/bigwig/SRR9889940.bw',
    cells_3T3_rep2     = 'results/other_datasets/3T3_cells/bigwig/SRR9889941.bw',
  output:
#    markers='results/other_datasets/PCA/markers_all.bed',
    table_cell_lines   = 'results/other_datasets/PCA/PCA_table_cell_lines.npz',
    table_brain        = 'results/other_datasets/PCA/PCA_table_brain.npz',
    markers_cell_lines = 'results/other_datasets/PCA/markers_cell_lines.bed',
    markers_brain      = 'results/other_datasets/PCA/markers_brain.bed',
  shell:
    """
    ls {input.markers_cell_lines}*.bed | while read line; do head -100 $line >> {output.markers_cell_lines}; done 
    ls {input.markers_brain}*.bed | while read line; do head -100 $line >> {output.markers_brain}; done 
    multiBigwigSummary BED-file -b {input.cell_lines}*.bw {input.Oli_neu_GCB} {input.mESC_bigwig_1} {input.mESC_bigwig_2} {input.cells_3T3_rep1} {input.cells_3T3_rep2} -o {output.table_cell_lines} --BED {output.markers_cell_lines} 
    multiBigwigSummary BED-file -b {input.scCT_bigwig}*.bw {input.bonev_CN} {input.matsuda_MGL} {input.OPCs_GCB} -o {output.table_brain} --BED {output.markers_brain} 
    """

