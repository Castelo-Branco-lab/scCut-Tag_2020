configfile: os.path.dirname(workflow.basedir) + '/config/config.yaml'
include: 'preflight'
include: 'snakefile_preprocess'

import re
import os
import glob

# Merge and run clustering together
rule clustering_all:
  input:
    expand("results/{antibody}/clustering/01.clustering.Rds",antibody = antibody_dict.keys()),
    expand("results/{antibody}/clustering/bam_per_cluster/bed/", antibody = antibody_dict.keys()),
    expand("results/{antibody}/clustering/bam_per_cluster/bam/", antibody = antibody_dict.keys()),
    expand("results/{antibody}/clustering/bam_per_cluster/bigwig/", antibody = antibody_dict.keys()),
    # Merged bam per cluster
    [expand('results/{antibody}/clustering/bam_per_cluster/bam_merged/{cluster}.bam', \
      antibody = antibody, \
      cluster  = list(set([re.sub("_rep.*.bam","",os.path.basename(x)) for x in glob.glob('results/' + antibody + '/clustering/bam_per_cluster/bam/*.bam')]))) for antibody in antibody_list],
    # Peak callin bam per cluster
    [expand('results/{antibody}/clustering/bam_per_cluster/macs_broad/{cluster}/{cluster}_peaks.broadPeak',
      antibody = antibody, \
      cluster  = list(set([re.sub("_rep.*.bam","",os.path.basename(x)) for x in glob.glob('results/' + antibody + '/clustering/bam_per_cluster/bam/*.bam')]))) for antibody in antibody_list],
    
    # expand("results/other_datasets/correlation/{antibody}_correlation_matrix.txt.gz",antibody = antibody_dict.keys()),


########### FINAL TWEAKED CLUSTERING
rule clustering_final:
  input:
    lambda wildcards: expand("results/{sample}/seurat/bin_5000/Seurat_object.Rds", sample = [x for x in samples_dict if samples_dict[x] == wildcards.antibody]),
    notebook       = os.path.dirname(workflow.basedir) + "/notebooks/{antibody}/{antibody}_clustering_merge.Rmd",
    RNAmarkers     = 'results/Sten_RNA/clustering/sten_RNA_markers.csv',
    GFPmarkers     = 'results/Sox10_RNA/clustering/GFP/markers.csv',
    fragments      = "results/{antibody}/fragments.tsv.gz",
    # peaks_narrow   = 'results/merged/{antibody}/macs/narrow/{antibody}_peaks.narrowPeak', # TODO: Fix atac conflict
    # peaks_broad    = 'results/merged/{antibody}/macs/broad/{antibody}_peaks.broadPeak' # TODO: Fix atac conflict
    # TODO: Olig2 depends on H3K27ac, write lambda function for that 
  output:
    seurat  = "results/{antibody}/clustering/01.clustering.Rds",
    report  = "results/{antibody}/clustering/01.clustering.html",
    markers = "results/{antibody}/clustering/markers.csv",
    bigwig  = directory("results/{antibody}/clustering/bigwig/"),
    bed     = directory("results/{antibody}/clustering/markers_bed/"),
    table   = "results/{antibody}/clustering/bam_per_cluster/cluster_barcode_table.csv",
    
  params:
    config         = config_file,
    out_prefix     = CWD + '/results/',
    report         = CWD + '/results/{antibody}/clustering/01.clustering.html',
  shell:
    " Rscript -e \"rmarkdown::render(input='{input.notebook}',output_file = '{params.report}', params=list(config='{params.config}',out_prefix = '{params.out_prefix}',antibody = '{wildcards.antibody}'))\" "


# Export bed per cluster
rule bed_per_cluster_and_replicate:
  input:
    fragments = "results/{antibody}/fragments.tsv.gz",
    barcodes  = "results/{antibody}/clustering/bam_per_cluster/cluster_barcode_table.csv"
  output:
    directory("results/{antibody}/clustering/bam_per_cluster/bed/")
    #directory("results/other_datasets/correlation/{antibody}/bed/")
  params:
    script = os.path.dirname(workflow.basedir) + "/scripts/export_bam_per_replicate_and_cluster.py"
  shell:
    """
    python3 {params.script} -f {input.fragments}  -b {input.barcodes}  -o {output} 
    """

# bed per cluster to bam

rule bed_to_bam_per_cluster_and_replicate:
  input:
    bed = "results/{antibody}/clustering/bam_per_cluster/bed/",
    genome = "results/general/mm10.chromSizes",
  output:
    directory("results/{antibody}/clustering/bam_per_cluster/bam/")
  shell:
    """
    mkdir {output}
    ls {input.bed}/*.bed | while read line; do 
      BAM=$(basename ${{line/.bed/.bam}})
      bedToBam -i $line -g {input.genome} > {output}/$BAM && samtools index {output}/$BAM & 
    done
    wait $(jobs -p)
    """

# Bam per cluster to bw
rule bam_to_bw_bam_per_cluster:
  input:
    "results/{antibody}/clustering/bam_per_cluster/bam/"
  output:
    directory("results/{antibody}/clustering/bam_per_cluster/bigwig/")
  threads: 16
  shell:
    """
    mkdir {output}
    ls {input}/*.bam | while read line; do
      BIGWIG=$(basename ${{line/.bam/.bw}})
      bamCoverage -b $line -o {output}/$BIGWIG --normalizeUsing RPKM -p {threads}
    done
    """

rule merge_bam_per_cluster:
  input:
    'results/{antibody}/clustering/bam_per_cluster/bam/'
  output:
    bam   = 'results/{antibody}/clustering/bam_per_cluster/bam_merged/{cluster}.bam',
    index = 'results/{antibody}/clustering/bam_per_cluster/bam_merged/{cluster}.bam.bai'
  threads: 8
  shell:
    'samtools merge -@ {threads} - {input}/{wildcards.cluster}*.bam | samtools sort > {output.bam} && samtools index {output.bam}'
  

###################### FIX FROM HERE
# peaks per cluster
rule call_peaks_bam_per_cluster:
  input:
    'results/{antibody}/clustering/bam_per_cluster/bam_merged/{cluster}.bam'
  output:
   'results/{antibody}/clustering/bam_per_cluster/macs_broad/{cluster}/{cluster}_peaks.broadPeak',
  params:
    outdir    = 'results/{antibody}/clustering/bam_per_cluster/macs_broad/{cluster}/',
  shell:
    """
      macs2 callpeak -t {input} \
        -n {wildcards.cluster} \
        -f BAMPE \
        -g mm \
        --qvalue 1e-10 \
        --outdir {params.outdir} \
        --broad \
        --bdg \
        --max-gap 1000 \
        --min-length 500 \
        --broad-cutoff 0.001 \
        --llocal 1000000 \
        --slocal 0
  """


# Correlation matrix for the bam per cluster and replicate
rule bigwig_summary_all_peaks:
  input:
    scCT_bigwig        = "results/{antibody}/clustering/bam_per_cluster/bam/",
    peaks              = "results/merged/{antibody}/macs/narrow/{antibody}_peaks.narrowPeak",
  output:
    matrix             = "results/other_datasets/correlation/{antibody}_correlation_matrix.txt.gz"
  threads: 16
  shell:
    "multiBigwigSummary BED-file -b {input.scCT_bigwig}*.bw -o {output.matrix} --BED {input.peaks} -p {threads}"
